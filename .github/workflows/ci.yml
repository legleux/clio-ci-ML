name: Build Clio
on:
  repository_dispatch:
    types: build
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ${{ matrix.runner || 'ubuntu-20.04' }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:

          - runner: ubuntu-20.04
            name: Ubuntu 20.04

          - runner: macos-11
            name: macOS 11

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: legleux/clio
          ref: pkging

      - name: Get boost source
        uses: actions/upload-artifact@master
        with:
          name: boost
          path: boost_1_75_0

      - name: Build boost
        run: |
          wget https://boostorg.jfrog.io/artifactory/main/release/1.75.0/source/boost_1_75_0.zip
          unzip boost_1_75_0.zip
          cd boost_1_75_0 && ./bootstrap && ./b2 cxxflags="-std=c++14"
          echo "BOOST_ROOT=$PWD" >> $GITHUB_ENV


      - name: Get boost
        uses: actions/download-artifact@master
        with:
          name: boost
          path: boost_1_75_0

      - name: Build
        run: |
          OS=${{ matrix.runner }}
          export BOOST_ROOT=${{ env.BOOST_ROOT }}
          echo "BOOST_ROOT: $BOOST_ROOT"
          if [[ $OS =~ "ubuntu" ]]; then
            protobuf-compiler libprotobuf-dev bison flex autoconf
            export CC=$(which gcc-9)
            export CXX=$(which g++-9)
          else
            brew install git cmake pkg-config protobuf openssl@1.1 ninja
            export OPENSSL_ROOT=$(brew --prefix openssl@1.1)
          fi
          cmake -B build && cmake --build build --parallel $(nproc)